#:import os os

# hints are width then height
# left top right bottom
# hotizontal vertical

<VertiBox@BoxLayout>:
    orientation: 'vertical'

<BlackLabel@Label>:
    color: 0, 0, 0, 1

<ScrapeLabel@BlackLabel>:
    halign: 'left'
    valign: 'middle'
    text_size: self.size

<ScrapeCheckBox@CheckBox>:
    size_hint_x: None
    width: 50

<Login>:
    on_pre_enter: root.load_creds()
    on_pre_leave: root.save_creds()
    VertiBox:
        canvas:
            Color:
                rgb: 1, 1, 1
            Rectangle:
                size: self.size
        padding: [50, 0, 50, 300]
        BlackLabel:
            text: 'FBScraper ver. {}\nWritten by Vince Au <vinceau09@gmail.com>\nLast updated {}'.format(app.version, app.last_updated)
            halign: 'left'
            size_hint_y: 0.2
            text_size: self.size
        VertiBox:
            size_hint_y: 0.8
            BoxLayout:
                size_hint_y: 0.8
                GridLayout:
                    size_hint: (.8, .4)
                    cols: 2
                    BlackLabel:
                        size_hint: (0.4, 1)
                        text_size: self.size
                        text: 'Facebook Email'
                        halign: 'right'
                        valign: 'middle'
                        padding_x: 10
                    TextInput:
                        id: login
                        hint_text: 'your@email.com'
                        focus: True
                        multiline: False
                        write_tab: False
                        on_text_validate: loginbutton.dispatch('on_release')
                    BlackLabel:
                        size_hint: (0.4, 1)
                        text_size: self.size
                        text: 'Facebook Password'
                        halign: 'right'
                        valign: 'middle'
                        padding_x: 10
                    TextInput:
                        id: password
                        password: True
                        multiline: False
                        write_tab: False
                        on_text_validate: loginbutton.dispatch('on_release')
                Button:
                    id: loginbutton
                    size_hint: (.2, .4)
                    text: 'Login'
                    color: (40, 120, 230, 1)
                    on_release: root.do_login(login.text, password.text)
            BoxLayout:
                size_hint_y: .1
                CheckBox:
                    size_hint_x: .2
                    id: storecreds
                BlackLabel:
                    size_hint_x: .8
                    halign: 'left'
                    valign: 'middle'
                    text_size: self.size
                    size_hint_x: 0.8
                    text: 'Remember me (Credentials are stored as plaintext in {})'.format(root.login_file)
            Label:
                color: 1, 0, 0, 1
                opacity: 0
                id: fail
                size_hint_y: .1
                text: 'ERROR: Failed to login. Check your credentials and try again.'


<CompleteDialog>:
    VertiBox:
        size: root.size
        pos: root.pos
        Label:
            text_size: self.size
            valign: 'middle'
            text: root.notice
        BoxLayout:
            size_hint_y: None
            height: 30
            Button:
                text: 'Back'
                on_release: root.dismiss()
            Button:
                text: 'Exit'
                on_release: app.stop()


<LoadDialog>:
    VertiBox:
        size: root.size
        pos: root.pos
        Label:
            size_hint_y: 0.1
            text: 'Current Directory: ' + filechooser.path
        FileChooserListView:
            id: filechooser
            size_hint_y: 0.9
            filters: [root.is_dir] if root.hide_files else []
            dirselect: root.hide_files
        BoxLayout:
            size_hint_y: None
            height: 30
            Button:
                text: 'Cancel'
                on_release: root.cancel()
            Button:
                text: 'Select'
                disabled: not root.hide_files and len(filechooser.selection) == 0
                on_release: root.load(filechooser.path, filechooser.selection)

<AdvancedSettings>:
    VertiBox:
        size: root.size
        pos: root.pos
        padding: [20] * 4
        canvas:
            Color:
                rgb: 1, 1, 1
            Rectangle:
                pos: self.pos
                size: self.size
        VertiBox:
            size_hint_y: 0.4
            BoxLayout:
                size_hint_y: 0.2
                ScrapeLabel:
                    size_hint_x: 0.8
                    text: 'Content to scrape'
                Button:
                    size_hint_x: 0.2
                    text: 'Toggle All'
                    on_release: root.toggle()
            GridLayout:
                size_hint_y: 0.8
                cols: 6
                ScrapeCheckBox
                    id: posts
                ScrapeLabel:
                    text: 'Posts'
                ScrapeCheckBox
                    id: friends
                ScrapeLabel:
                    text: 'Friends'
                ScrapeCheckBox
                    id: photos
                ScrapeLabel:
                    text: 'Photos'
                ScrapeCheckBox
                    id: likes
                ScrapeLabel:
                    text: 'Likes'
                ScrapeCheckBox
                    id: about
                ScrapeLabel:
                    text: 'About'
                ScrapeCheckBox
                    id: groups
                ScrapeLabel:
                    text: 'Groups'
        VertiBox:
            size_hint_y: 0.2
            ScrapeLabel:
                text: 'Facebook Target folder naming'
            BoxLayout:
                TextInput
                    id: foldername
                    size_hint_x: 0.8
                Button
                    size_hint_x: 0.2
                    text: 'Default'
                    on_release: foldername.text = app.controller.def_foldername
        VertiBox:
            size_hint_y: 0.2
            ScrapeLabel:
                text: 'Facebook Target file naming'
            BoxLayout:
                TextInput
                    id: filename
                    size_hint_x: 0.8
                Button
                    size_hint_x: 0.2
                    text: 'Default'
                    on_release: filename.text = app.controller.def_filename
        BoxLayout:
            size_hint_y: 0.2
            padding: [0, 20, 0, 0]
            Button:
                text: 'Cancel'
                on_release: root.cancel()
            Button:
                text: 'Save'
                on_release: root.save_settings()

<Settings>:
    VertiBox:
        padding: [40]*4
        VertiBox:
            size_hint_y: 0.2
            Label:
                text_size: self.size
                valign: 'bottom'
                text: 'Output Directory'
            BoxLayout:
                TextInput:
                    id: pathbox
                    text: os.path.abspath(app.controller.output_dir)
                    size_hint_x: 0.8
                    disabled: True
                Button:
                    id: choosedir
                    text: 'Select'
                    size_hint_x: 0.2
                    on_release: root.choosedir()
        BoxLayout:
            size_hint_y: 0.7
            VertiBox:
                BoxLayout:
                    size_hint_y: 0.2
                    Label:
                        size_hint_x: 0.8
                        text_size: self.size
                        valign: 'bottom'
                        text: 'Facebook Targets (<Enter> separated)'
                    Button:
                        size_hint: (0.2, 0.6)
                        text: 'Load from file'
                        on_release: root.load_file()
                    Button:
                        size_hint: (0.2, 0.6)
                        text: 'Find Targets'
                        on_release: root.search_view()
                TextInput:
                    id: names
                    size_hint: (1, 0.8)
                    hint_text: 'https://www.facebook.com/someuser\nsomeusername\nsomeprofileidnumber'
        BoxLayout:
            size_hint_y: 0.1
            padding: [0, 20, 0, 0]
            Button:
                size_hint_x: 0.5
                text: 'Advanced Settings'
                on_release: root.adv_settings()
            Button:
                size_hint_x: 0.5
                text: 'Start Scrape'
                on_release: root.do_scrape(names.text)
                disabled: len(names.text) == 0


<Logging>:
    VertiBox:
        padding: [20]*4
        BoxLayout:
            size_hint_y: 0.1
            VertiBox:
                size_hint_x: 0.8
                Label:
                    id: count
                Label:
                    id: current_user
            BoxLayout:
                size_hint: (0.2, 0.7)
                Button:
                    text: 'Pause'
                    id: pause
                    on_release: root.pause()
                Button:
                    text: 'Stop'
                    id: stop
                    on_release: root.stop()
        ScrollView:
            size_hint_y: 0.9
            scroll_type: ['bars']
            bar_width: '10dp'
            Label:
                id: logtext
                text_size: self.width, None
                size_hint_y: None
                height: self.texture_size[1]
